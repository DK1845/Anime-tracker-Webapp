{"ast":null,"code":"var _jsxFileName = \"C:\\\\DK\\\\Intership\\\\anime_tracker_webapp\\\\frontend\\\\src\\\\components\\\\ThemeToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light');\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    style: {\n      padding: '8px 16px',\n      borderRadius: '8px',\n      border: 'none',\n      cursor: 'pointer',\n      background: theme === 'light' ? '#333' : '#ddd',\n      color: theme === 'light' ? '#fff' : '#000',\n      transition: 'all 0.3s ease'\n    },\n    children: theme === 'light' ? 'üåô Dark Mode' : '‚òÄÔ∏è Light Mode'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"3ZrzI9B7kxTUELTFlX71vn6HZU0=\");\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ThemeToggle","_s","theme","setTheme","localStorage","getItem","document","documentElement","setAttribute","setItem","toggleTheme","onClick","style","padding","borderRadius","border","cursor","background","color","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/DK/Intership/anime_tracker_webapp/frontend/src/components/ThemeToggle.js"],"sourcesContent":["                     import React, { useEffect, useState } from 'react';\r\n\r\nconst ThemeToggle = () => {\r\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light');\r\n\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={toggleTheme}\r\n      style={{\r\n        padding: '8px 16px',\r\n        borderRadius: '8px',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        background: theme === 'light' ? '#333' : '#ddd',\r\n        color: theme === 'light' ? '#fff' : '#000',\r\n        transition: 'all 0.3s ease',\r\n      }}\r\n    >\r\n      {theme === 'light' ? 'üåô Dark Mode' : '‚òÄÔ∏è Light Mode'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle;"],"mappings":";;AAAqB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;EAE5ET,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEN,KAAK,CAAC;IAC1DE,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBP,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,oBACEH,OAAA;IACEY,OAAO,EAAED,WAAY;IACrBE,KAAK,EAAE;MACLC,OAAO,EAAE,UAAU;MACnBC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE,MAAM;MACdC,MAAM,EAAE,SAAS;MACjBC,UAAU,EAAEf,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,MAAM;MAC/CgB,KAAK,EAAEhB,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,MAAM;MAC1CiB,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,EAEDlB,KAAK,KAAK,OAAO,GAAG,cAAc,GAAG;EAAe;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEb,CAAC;AAACvB,EAAA,CA5BID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}