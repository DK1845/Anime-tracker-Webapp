{"ast":null,"code":"var _jsxFileName = \"C:\\\\DK\\\\Intership\\\\anime_tracker_webapp\\\\frontend\\\\src\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\n// frontend/src/ThemeContext.js\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'light');\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme === 'dark' ? 'dark' : 'light');\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const toggle = () => setTheme(t => t === 'dark' ? 'light' : 'dark');\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme,\n      toggle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeProvider, \"sdN5stDE6MXWaThZodKo/2BHQLs=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","localStorage","getItem","document","documentElement","setAttribute","setItem","toggle","t","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/DK/Intership/anime_tracker_webapp/frontend/src/ThemeContext.js"],"sourcesContent":["// frontend/src/ThemeContext.js\r\nimport React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [theme, setTheme] = useState(() => localStorage.getItem('theme') || 'light');\r\n\r\n  useEffect(() => {\r\n    document.documentElement.setAttribute('data-theme', theme === 'dark' ? 'dark' : 'light');\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggle = () => setTheme(t => (t === 'dark' ? 'light' : 'dark'));\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme, toggle }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASM,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,MAAMS,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;EAElFX,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEN,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;IACxFE,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMQ,MAAM,GAAGA,CAAA,KAAMP,QAAQ,CAACQ,CAAC,IAAKA,CAAC,KAAK,MAAM,GAAG,OAAO,GAAG,MAAO,CAAC;EAErE,oBACEd,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEC,QAAQ;MAAEO;IAAO,CAAE;IAAAV,QAAA,EACvDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B;AAAChB,EAAA,CAfeF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}